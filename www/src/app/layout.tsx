import AppHeader from "@/components/app-header";
import AppToolbar from "@/components/app-toolbar";
import FooterApp from "@/components/footer-app";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const footerNav = await getFooterNavigation();

  const companyInfo = await getCompanyInfo();

  return (
    <html lang="en">
      {/* <body className={inter.className}>{children}</body> */}
      <body className="bg-gray-light">
        <AppHeader></AppHeader>
        <main>{children}</main>
        <div className="hidden lg:grid">
          <FooterApp model={footerNav} companyInfo={companyInfo}></FooterApp>
        </div>
        <div className="lg:hidden">
          <AppToolbar></AppToolbar>
        </div>
      </body>
    </html>
  );
}

async function getFooterNavigation() {
  try {
    const data = await fetch(
      `${process.env.STRAPI_URL}/api/footer-nav?populate[simple_nav][populate]=*`,
      {
        cache: "force-cache",
        headers: {
          Authorization: `Bearer ${process.env.STRAPI_JWT_TOKEN}`,
        },
      }
    );

    const response = await data.json();

    return response.data.attributes.simple_nav;
  } catch (error) {
    return {};
  }
}

async function getCompanyInfo() {
  try {
    const data = await fetch(
      `${process.env.STRAPI_URL}/api/company-info?populate=*`,
      {
        cache: "force-cache",
        headers: {
          Authorization: `Bearer ${process.env.STRAPI_JWT_TOKEN}`,
        },
      }
    );

    const response = await data.json();

    response.data.attributes.company_logo_vector.data.attributes.url = `${process.env.STRAPI_IMAGE_URL}${response.data.attributes.company_logo_vector.data.attributes.url}`;

    return response.data.attributes;
  } catch (error) {
    return {};
  }
}
